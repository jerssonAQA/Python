# -*- coding: utf-8 -*-
"""Introducción a Python.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1pVwib_Z7PfoCrrDl8snAWkAo9qudLRdd

#<center>**Introducción a Python**<center>
###*Doctorado en ingenieria*
---

## 1. Tipos de datos

Integer (int) es un valor numerico de tipo entero puede tener un rango muy grande
"""

type(673462983746)

"""Float (float) es un valor numerico de tipo punto flotante puede tener un rango muy grande"""

type(983456.454908)

"""boolean (bool) es un valor que solamente puede tener dos valores (True, False)"""

type(False)

"""String es un tipo de dato el cual se caracteriza por almacenar una cadena de texto,"""

type("Hola mundo")

saludo="hola mundo"
edad=26
persona=True
print(persona)

"""Las listas son secuencias mutables de valores."""

lista = [1, 2, 3, 8, 9,8348,7594,"Hola",False,[12,35,"como estan"]]
print(lista)
lista.append('w')
lista1=[3,5,14,'pepe',True,[15,13]]
print(lista1)
lista=lista+lista1
lista.count('w')

"""Las tuplas son secuencias inmutables de valores.

"""

tupla = (1, 4, 8, 0, 5)
print(tupla)
tupla.index()

"""Los diccionarios son tipos especiales de contenedores en los que se puede acceder a sus elementos a partir de una clave única.

"""

diccionario = {'a': 1, 'b': 3, 'z': 8}
print(diccionario.items())

"""## Operaciones En python

###Operación de Aritméticos: +, -, *, /, %, **,//
"""

a=10
b=6
print("División entera=",a**b)

"""###Operadores Relacionales: >, <, ==, >=, <=, !="""

c=5
d=10
print(c>d) #f
print(c<d) #v
print(c==d)#f
print(c>=d)#f
print(c<=d)#V
print(c!=d)#V

"""###Operadores Bit a Bit: &, |, ^, ~, >>, <<"""

bits=10
bits2=15
print(bits&bits2)
print(bits|bits2)
print(bits^bits2)
print(~bits)
print(bits>>2)
print(bits<<bits2)

"""###Operadiores de Asignación: =, +=, -=, /=, %=, **=, //=, &=, |=, ^=, >>=, <<="""

x = 10100
b = 3
print(x,b)
x+=b
print(x)
x-=b
print(x)
x*=b
print(x)
x/=b
print(x)
x%=b
print(x)
x**=b
print(x)
x//=b
print(x)
x=100
x&=b
print(x)
x|=b
print(x)
x^=b
print(x)
x>>=b
#print(x)
x<<=b
print(x)

"""###Operadores Logicos: and, or, not"""

x = True
y = False
print(x and y)
print(x or y)
print(not x)

"""###Operaciones con numeros complejos"""

x=5+3j
b=10+5j
x+=b
print(x)
x-=b
print(x)
x*=b
print(x)
x/=b
print(x)
x**=b
print(x)

"""## Sentencias de control en Python

###**Sentencia if, elif, else:**
"""

z = 7
if z > 8:
  print("¡No voy a imprimir!") #esta sentencia no se ejecuta
  print("esta dentro del bloque1")
elif z > 5:
  print("¡Yo lo haré!") #esta sentencia se ejecuta
  print("esta dentro del bloque2")
elif z > 6:
  print("¡Tampoco voy a imprimir!") #esta sentencia no se ejecuta
  print("esta dentro del bloque2a")
else:
  print("¡Yo tampoco!") #esta sentencia no se ejecuta

"""**Ejercicio de clasificar a las personas segun la edad.**

1.   Menores de 10 años seran clasificados como "Niño"
2.   Entre 10 y 18 años seran clasificados como "Joven"
3. Mayores de 18 y menores de 55 años seran clasificados como "Adulto"
4. desde 55 años seran clasificados como "Adulto Mayor"

"""

z = 49
if z < 10:
  print("Niño") 
elif z > 10 or z < 18:
  print("Joven") 
elif z > 18 or z < 55:
  print("Adulto") 
else:
  print("Adulto mayor")

"""###**Sentencia While**"""

i = 1
while i <= 3:
    print(i)
    i += 1
print("Programa terminado")

"""Ejercicio de validación de entrada"""

total=0
nro=int(input("Número: "))
while nro != 0:
    total+=nro
    nro=int(input("Número: "))

"""Ejercicio: Introducir la palabra "exit" que permita terminar el programa imprimiendo "salida exitosa" o imprimir "Desea terminar el programa"


"""

var= input("Ingrese palabra:")
while var !="exit":
  print("Desea salir del programa:",var)
  var= input("Ingrese palabra:")
print("salida Exitosa")

"""###**Sentencia for**"""

nums = [4, 78, 9, 84, 584, 5849, 484+578j ,"hola"]
for n in nums:
    print(n)

for i in range(11):
    print(i)

"""Ejercicio: Imprima el siguiente patrón con el ciclo for



*   1
*   1 2
*   1 2 3
*   1 2 3 4
*   1 2 3 4 5


"""

vector=[]
for i in range(5):
  vector.append(i+1)
  print(vector)

"""##Funciones

La función suma debe recibir parametros/argumentos y es opcional que la funcion tenga o no salida
"""

def suma(a,b):
  resultado=a+b
  print(resultado)
  return resultado

#resul=suma(5,10)
#print(resul)

def pares(x1):
  if x1%2==0:
    y=True
  else:
    y=False
  return y

contador=int(input("Ingrese el valor:"))
es_par=pares(contador)
if es_par==True:
  print("El valor del contador es par")
else:
  print("El valor del contador es impar")

"""Función par: dado un arreglo numerico de entrada verificar si es par o impar"""

def par(x):
  if x%2==0:
    print(str(x)+' es un numero par')
  else:
    print(str(x)+' no es un numero par')
par(59)

Arreglo=[1,2,3,4,5,6,7,8,10,19,348,5893,4983]
for i in Arreglo:
  par(i)
  suma(i,5)

"""Funcion que permita realizar la secuencia fibonacci"""

def fibonacci (x):
  a,b =1,1
  for i in range(x):
    suma=a+b
    a=b
    b=suma
  return b
print(fibonacci(15))

"""Ejercicio: Realizar algoritmo que permita identificar si un numero es primo o no dado un vector numerico de entrada"""

vector=[1,2,3,4,5,7,9,11,328,238,949,58,495,493,5794,483,8,5]
cont=0
def primo (V):
  for i in vector:
    for j in range(i):
      if j==0:
        pass
      elif i%j==0:
        cont+=1
    if i==1:
      print(str(i)+" es un numero primo")
    elif cont==1:
      print(str(i)+" es un numero primo")
    else:
      print(str(i)+" no es un numero primo")
    cont=0

primo(vector)

"""Función que permita calcular la suma de un vector """

def suma_vector(vec):
  suma=0
  for i in vec:
    suma+=i
  return suma

Sum_vector=suma_vector(vector)
print(Sum_vector)

"""Función que permita comparar la suma de dos vectores """

def comparar(par1,par2):
  suma1=suma_vector(par1)
  suma2=suma_vector(par2)
  if suma1>suma2:
    print("El vector 1 es mayor que el vector 2")
  elif suma1==suma2:
    print("los vectores son iguales")
  else:
    print("El vector 2 es mayor que el vector 1")

comparar(Arreglo,vector)